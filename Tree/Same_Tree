# Definition for a binary tree node.
class TreeNode:
    def __init__(self, val=0, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right

class Solution:
    def isSameTree(self, p: TreeNode, q: TreeNode) -> bool:
        if p is None and q is None:
            return True
        elif (p is not None and q is None) or (p is None and q is not None) or p.val != q.val:
            return False
        else:
            return self.isSameTree(p.left, q.left) and self.isSameTree(p.right, q.right)


# ---------- DRIVER CODE ----------
if __name__ == "__main__":
    # Tree 1
    p = TreeNode(1)
    p.left = TreeNode(2)
    p.right = TreeNode(3)

    # Tree 2
    q = TreeNode(1)
    q.left = TreeNode(2)
    q.right = TreeNode(3)

    # Test
    sol = Solution()
    print("Are trees same? ->", sol.isSameTree(p, q))  # Expected: True

    # Modify second tree
    q.right = TreeNode(4)
    print("Are trees same after change? ->", sol.isSameTree(p, q))  # Expected: False

