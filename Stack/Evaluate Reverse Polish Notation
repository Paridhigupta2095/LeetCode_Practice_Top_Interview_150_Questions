from typing import List

class Solution:
    def evalRPN(self, tokens: List[str]) -> int:
        stack=[]
        for i in range(len(tokens)):
            if tokens[i] not in "+-/*":
                stack.append(int(tokens[i]))
            else:
                a=stack[-1]
                stack.pop()
                b=stack[-1]
                stack.pop()
                if (tokens[i]=='+'):
                    c=a+b
                elif (tokens[i]=='-'):
                    c=b-a
                elif (tokens[i]=='*'):
                    c=a*b 
                else:
                    c=int(b/a)   # integer division
                stack.append(c)
        return stack[-1]


if __name__ == "__main__":
    sol = Solution()
    tokens = ["2","1","+","3","*"]   # Example 1: (2 + 1) * 3 = 9
    print("Result:", sol.evalRPN(tokens))

    tokens = ["4","13","5","/","+"]  # Example 2: 4 + (13 / 5) = 6
    print("Result:", sol.evalRPN(tokens))

    tokens = ["10","6","9","3","+","-11","*","/","*","17","+","5","+"]  
    # Example 3: evaluates to 22
    print("Result:", sol.evalRPN(tokens))
