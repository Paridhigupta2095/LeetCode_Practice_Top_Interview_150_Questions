from typing import List

class Solution:
    def productExceptSelf(self, nums: List[int]) -> List[int]:
        n = len(nums)
        p1 = n * [1]
        p2 = n * [1]
        
        for i in range(1, n):
            p1[i] = nums[i - 1] * p1[i - 1]
            p2[n - 1 - i] = nums[n - i] * p2[n - i]
            
        r = []
        for i in range(n):
            r.append(p1[i] * p2[i])
        return r


# Driver code
if __name__ == "__main__":
    sol = Solution()

    # Test cases
    test_cases = [
        [1, 2, 3, 4],
        [-1, 1, 0, -3, 3],
        [2, 3, 4, 5],
        [10, 5, 2]
    ]

    for nums in test_cases:
        print(f"Input: {nums} â†’ Output: {sol.productExceptSelf(nums)}")
