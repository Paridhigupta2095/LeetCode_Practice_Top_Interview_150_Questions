from typing import List

class Solution:
    def canCompleteCircuit(self, gas: List[int], cost: List[int]) -> int:
        
        if (sum(gas) < sum(cost)):
            return -1

        total = 0
        i = 0
        n = len(gas)
        start = 0
        while i < n:
            curr = gas[i] - cost[i]
            total += curr
            if total < 0:
                total = 0
                start = i + 1
            i += 1
        return start


# Driver code
if __name__ == "__main__":
    sol = Solution()

    # Test cases
    gas1, cost1 = [1,2,3,4,5], [3,4,5,1,2]
    gas2, cost2 = [2,3,4], [3,4,3]

    print("Test Case 1 â†’", sol.canCompleteCircuit(gas1, cost1))  # Expected 3
    print("Test Case 2 â†’", sol.canCompleteCircuit(gas2, cost2))  # Expected -1

