from typing import List

class Solution:
    def removeElement(self, nums: List[int], val: int) -> int:
        # Two pointer approach
        r = 0
        w = 0
        n = len(nums)
        while r < n:
            if nums[r] != val:
                nums[w] = nums[r]
                r += 1
                w += 1
            else:
                r += 1
        return w


# ---------------- Driver Code ----------------
if __name__ == "__main__":
    sol = Solution()
    
    # List of test cases: (nums, val)
    test_cases = [
        ([3, 2, 2, 3], 3),          # remove all 3's
        ([0, 1, 2, 2, 3, 0, 4, 2], 2),  # remove all 2's
        ([1, 1, 1, 1], 1),          # remove all 1's
        ([4, 5], 6),                # value not present
    ]
    
    for i, (nums, val) in enumerate(test_cases, 1):
        nums_copy = nums[:]  # copy so we don't modify original test case
        k = sol.removeElement(nums_copy, val)
        print(f"Test case {i}: nums={nums}, val={val}")
        print(f" â†’ New length = {k}, Modified array = {nums_copy[:k]}")
        print("-" * 40)
